version: 2.1

orbs:
  terraform: 'circleci/terraform@3.0.1'

jobs:
  lint-test:
    docker:
      - image: cimg/node:14.19
    steps:
      - checkout
      - run:
          name: 'Install dependencies'
          command: 'yarn install'
      - run:
          name: 'Run lint'
          command: 'yarn lint'
      - run:
          name: 'Run tests'
          command: 'yarn test'
  postman-test:
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Check node version
          command: |
            node -v
      - run:
          name: 'Install Project Node'
          command: |
            set +x
            source ~/.bashrc
            nvm install 14.19
            NODE_DIR=$(dirname $(which node))
            echo "export PATH=$NODE_DIR:\$PATH" >> $BASH_ENV
      - run:
          name: Check node version
          command: |
            node -v
      - run:
          name: 'Install dependencies'
          command: 'yarn install'
      - run:
          name: Start all services declared in docker-compose.yml
          command: docker-compose up -d
      - run:
          name: Start
          command: yarn start
      - run:
          name: Run Postman tests
          command: yarn test:postman
      - run:
          name: Stop all services declared in docker-compose.yml
          command: docker-compose down
  build:
    docker:
      - image: cimg/node:14.19
    steps:
      - checkout
      - run:
          name: 'Install dependencies'
          command: 'yarn install'
      - run:
          name: 'Run build layer'
          command: 'yarn build:layer'
      - run:
          name: 'Run build lambda'
          command: 'yarn build:lambda'
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - dist_layer
            - terraform
  validate-plan:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally
      - run:
          name: terraform init & validate & plan
          command: |
            terraform -chdir=./terraform init -input=false
            terraform -chdir=./terraform validate
            terraform -chdir=./terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally
      - run:
          name: terraform
          command: |
            terraform -chdir=./terraform apply -auto-approve tfapply

workflows:
  lint-test-build-validate-plan-apply:
    jobs:
      - lint-test
      - postman-test:
          requires:
            - lint-test
      - build:
          requires:
            - postman-test
      - validate-plan:
          context:
            - AWS-DSR
          requires:
            - build
      - hold-apply:
          type: approval
          requires:
            - validate-plan
          filters:
            branches:
              only:
                - master
      - apply:
          context:
            - AWS-DSR
          requires:
            - hold-apply
